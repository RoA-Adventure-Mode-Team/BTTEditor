<Grid x:Class="RivalsAdventureEditor.Panels.TilesetEditor"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:RivalsAdventureEditor.Panels" 
      xmlns:tool="http://schemas.xceed.com/wpf/xaml/toolkit" 
      xmlns:drawing="clr-namespace:RivalsAdventureEditor.DrawingObjects" 
      xmlns:extensions="clr-namespace:RivalsAdventureEditor.Extensions"
      x:Name="Self"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid.Resources>
        <extensions:NullContainerSelector x:Key="ContainerStyleSelector">
            <extensions:NullContainerSelector.Default>
                <Style TargetType="{x:Type ComboBoxItem}">
                </Style>
            </extensions:NullContainerSelector.Default>
            <extensions:NullContainerSelector.Separator>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Separator Margin="4 8 4 8"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </extensions:NullContainerSelector.Separator>
        </extensions:NullContainerSelector>
        <ControlTemplate TargetType="Button" x:Key="SpritePicker">
            <Border BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                    UseLayoutRounding="True"
                    BorderThickness="1"
                    x:Name="OuterBorder"
                    TextBlock.Foreground="{TemplateBinding Foreground}">
                <Border BorderBrush="LightGray"
                        Padding="2 2 0 0"
                        BorderThickness="0 0 2 2"
                        x:Name="InnerBorder"
                        Background="White">
                    <ContentPresenter Margin="4 -4 8 0" VerticalAlignment="Center" x:Name="ContentHost"/>
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="LightCyan"/>
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="LightSkyBlue"/>
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="DarkBlue"/>
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="PowderBlue"/>
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="DeepSkyBlue"/>
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="DarkBlue"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Grid.Resources>
    
    <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition/>
    </Grid.ColumnDefinitions>

    <Separator Grid.Row="0" 
               Grid.ColumnSpan="2"
               Margin="0 10 0 10"/>

    <ComboBox x:Name="tilesetPicker"
              SelectionChanged="tilesetPicker_SelectionChanged"
              ItemContainerStyleSelector="{StaticResource ContainerStyleSelector}"
              HorizontalContentAlignment="Stretch"
              DisplayMemberPath="Name"
              Grid.Row="1"
              Margin="5 4 0 4"/>

    <Label Content="Tileset Sprite "
               FontWeight="Bold"
               VerticalAlignment="Center"
               Grid.Row="2"/>
    <Button Template="{StaticResource SpritePicker}"
            x:Name="spriteButton"
            Click="OnSpriteNameChanged"
            Margin="0 2 2 2"
            Grid.Row="2"
            Grid.Column="1"/>
    <Label  Content="Tile Size "
            Grid.Row="3"
            FontWeight="Bold"
            VerticalAlignment="Center"/>
    <Grid Grid.Row="3"
          Grid.Column="1">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Label  Content="W "
            VerticalAlignment="Center"/>
        <tool:IntegerUpDown Value="{Binding Tileset.TileWidth, ElementName=Self, Delay=700}"
                        Grid.Column="1"
                        ValueChanged="OnWidthChanged"
                        x:Name="widthBox"
                        Minimum="1"
                        Margin="0 2 2 2"/>
        <Label Content="H "
                Grid.Column="2"
                VerticalAlignment="Center"/>
        <tool:IntegerUpDown Value="{Binding Tileset.TileHeight, ElementName=Self, Delay=700}"
                            Grid.Column="3"
                            ValueChanged="OnHeightChanged"
                            x:Name="heightBox"
                            Minimum="1"
                            Margin="0 2 2 2"/>
    </Grid>

    <drawing:TilesetViewer Grid.Row="4"
                           Grid.ColumnSpan="2"
                           x:Name="viewer"
                           VerticalAlignment="Stretch"/>
</Grid>
